// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//aqui são criadas e alteradas tabelas do banco de dados

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//criar migration: yarn prisma migrate dev
model User {
  id         String    @id @default(uuid())
  name       String
  email      String    @unique
  password   String
  avatar     String?
  characters Char[]
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("users")
}

model Char {
  id                  String      @id @default(uuid())
  name                String
  title               String?
  race                String
  char_class          CharClass[]
  background          String? //antecedentes
  story               String?
  image               String?
  spells              String[]
  con                 String      @default("0")
  str                 String      @default("0")
  dex                 String      @default("0")
  int                 String      @default("0")
  wis                 String      @default("0")
  cha                 String      @default("0")
  wealth              String      @default("-") //riqueza
  max_hp              String      @default("-")
  current_hp          String      @default("-")
  temporary_hp        String      @default("-")
  experience          String      @default("0")
  armor_class         String      @default("10")
  ideals              String      @default("0")
  bonds               String[] //vínculos
  flaws               String[] //defeitos
  features            String[] //caracteristicas
  traits              String[] //traços
  skills              String[] //Perícias
  death_saving_throws String?
  allies              String[]
  proficiency_bonus   String?
  death_resistance    Boolean     @default(false)
  personality_traits  String[]
  languages           String[]
  Initiative          String      @default("-")
  cantrips            String[]
  userId              String
  user                User        @relation(fields: [userId], references: [id])
  note                Note[]
  created_at          DateTime?   @default(now())
  updated_at          DateTime?   @default(now())

  @@map("chars")
}

model CharClass {
  id    String @id @default(uuid())
  level String @default("1")
  name  String
  char  Char   @relation(fields: [charId], references: [id])

  charId String

  @@map("char_classes")
}

model Note {
  note_id      String   @id @default(uuid())
  text         String
  date         DateTime @default(now())
  char_note_id String
  char         Char     @relation(fields: [char_note_id], references: [id], onDelete: Cascade)

  @@map("char_notes")
}
